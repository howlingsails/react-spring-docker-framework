version: "3.6"
services:
  mongo1:
    hostname: mongo1
    container_name: localmongo1
    image: mongo:4.4.4-bionic
    expose:
      - 27017
    ports:
      - 27011:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
  mongo2:
    hostname: mongo2
    container_name: localmongo2
    image: mongo:4.4.4-bionic
    expose:
      - 27017
    ports:
      - 27012:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
  mongo3:
    hostname: mongo3
    container_name: localmongo3
    image: mongo:4.4.4-bionic
    expose:
      - 27017
    ports:
      - 27013:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
  vault:
    build:
      context: ./vault
      dockerfile: Dockerfile
    ports:
      - 8200:8200
    volumes:
      - ./vault/config:/vault/config
      - ./vault/policies:/vault/policies
      - ./vault/data:/vault/data
      - ./vault/logs:/vault/logs
    environment:
      - VAULT_ADDR=http://127.0.0.1:8200
    command: server -config=/vault/config/vault-config.json
    cap_add:
      - IPC_LOCK
    depends_on:
      - consul
  consul:
    build:
      context: ./consul
      dockerfile: Dockerfile
    ports:
      - 8500:8500
    command: agent -server -bind 0.0.0.0 -client 0.0.0.0 -bootstrap-expect 1 -config-file=/consul/config/config.json
    volumes:
      - ./consul/config/consul-config.json:/consul/config/config.json
      - ./consul/data:/consul/data
  consul-worker:
    build:
      context: ./consul
      dockerfile: Dockerfile
    command: agent -server -join consul -config-file=/consul/config/config.json
    volumes:
      - ./consul/config/consul-config.json:/consul/config/config.json
    depends_on:
      - consul
  management1:
    image: mysql/mysql-cluster
    volumes:
      - ./mysql.conf/my.cnf:/etc/my.cnf
      - ./mysql.conf/mysql-cluster.cnf:/etc/mysql-cluster.cnf
    #command: "ndb_mgmd --ndb-nodeid=1"
    command: ndb_mgmd
    networks:
      mysqlcluster:
        #        ipv4_address: 192.168.0.2
        ipv4_address: 172.28.0.2
  ndb1:
    image: mysql/mysql-cluster
    volumes:
      - ./mysql.conf/my.cnf:/etc/my.cnf
      - ./mysql.conf/mysql-cluster.cnf:/etc/mysql-cluster.cnf
    #command: bash -c 'sleep 40; exec ndbd'
    command: ndbd
    depends_on:
      - "management1"
    networks:
      mysqlcluster:
        #        ipv4_address: 192.168.0.3
        ipv4_address: 172.28.0.3
  ndb2:
    image: mysql/mysql-cluster
    volumes:
      - ./mysql.conf/my.cnf:/etc/my.cnf
      - ./mysql.conf/mysql-cluster.cnf:/etc/mysql-cluster.cnf
    #command: bash -c 'sleep 40; exec ndbd'
    command: ndbd
    depends_on:
      - "management1"
    networks:
      mysqlcluster:
        #        ipv4_address: 192.168.0.4
        ipv4_address: 172.28.0.4
  mysql1:
    image: mysql/mysql-cluster
    ports:
      - "3306:3306"
    volumes:
      - ./mysql.conf/my.cnf:/etc/my.cnf
      - ./mysql.conf/mysql-cluster.cnf:/etc/mysql-cluster.cnf
    #    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: bdteste
      MYSQL_USER: teste
      MYSQL_PASSWORD: teste
      MYSQL_ROOT_HOST: '%'
    #command: bash -c 'sleep 60; exec mysqld'
    command: mysqld
    depends_on:
      - "management1"
      - "ndb1"
      - "ndb2"
    networks:
      mysqlcluster:
        #        ipv4_address: 192.168.0.10
        ipv4_address: 172.28.0.10
  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080
    links:
      - mysql1:db
    networks:
      mysqlcluster:

networks:
  mysqlcluster:
    #  driver: overlay
    driver: bridge
    ipam:
      config:
        #    - subnet: 192.168.0.0/16
        - subnet: 172.28.0.0/16
          gateway: 172.28.5.254
##    - ip-range: 172.28.5.0/24

#  docker run -it -v "$PWD/mysql.conf/my.cnf:/etc/my.cnf" -v "$PWD/mysql.conf/mysql-cluster.cnf:/etc/mysql-cluster.cnf" --net=mysqlcluster_mysqlcluster mysql/mysql-cluster ndb_mgm